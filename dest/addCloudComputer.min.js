/*! cloud - v1.0.0 - 2018-01-29 */
private_cloud.controller("addCloudComputerController", [ "$scope", "$rootScope", "$http", "$state", "less_one_service", function(t, e, o, a, n) {
    t.formData = {
        computerCount: 1,
        net_work: []
    }, o({
        url: "/api/nova_limits",
        method: "GET",
        headers: e.headers
    }).then(function(e) {
        console.log(e.data.limits.absolute);
        var o = e.data.limits.absolute;
        t.count = {
            instances: {
                title: "云主机",
                used: o.totalInstancesUsed,
                total: o.maxTotalInstances,
                unit: "个"
            },
            cores: {
                title: "VCPUs",
                used: o.totalCoresUsed,
                total: o.maxTotalCores,
                unit: "个"
            },
            ram: {
                title: "内存",
                used: o.totalRAMUsed / 1024,
                total: o.maxTotalRAMSize / 1024,
                unit: "GB"
            }
        };
    }, function(t) {
        console.log(t);
    }), t.changeConfig = function(e) {
        console.log(e), t.coresChangeProgress = e.vcpus, t.ramChangeProgress = e.ram / 1024;
    }, t.formSubmit = function(n) {
        n.preventDefault();
        var r = [], s = [];
        t.formData.security && r.push({
            name: "default"
        }), angular.forEach(t.formData.net_work, function(t, o) {
            t && s.push({
                uuid: e.net_work[o].id
            });
        }), console.log(s), o({
            url: "/api/list_servers/",
            method: "POST",
            headers: e.headers,
            data: {
                server: {
                    name: t.formData.name,
                    imageRef: t.formData.imageRef,
                    flavorRef: t.formData.flavorRef.id,
                    availability_zone: "nova",
                    "OS-DCF:diskConfig": "AUTO",
                    security_groups: r,
                    networks: s,
                    min_count: t.formData.computerCount
                }
            }
        }).then(function(t) {
            console.log(t), 202 == t.status && (alert("添加成功"), a.go("count.cloudComputer"));
        }, function(t) {
            alert(t.data.forbidden.message);
        });
    }, t.changeNetworkMark = function() {
        t.changeNetwork = !0;
    }, t.lessone = function(t) {
        return n.change(t);
    };
} ]);
//# sourceMappingURL=addCloudComputer.min.js.map