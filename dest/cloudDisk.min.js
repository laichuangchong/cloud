/*! cloud - v1.0.0 - 2018-03-05 */
private_cloud.controller("cloudDiskController", [ "$scope", "$rootScope", "$http", "cloud_service", "$interval", "volume_service", "$state", "$timeout", function(e, t, o, s, l, a, u, n) {
    function d(t, o, s) {
        angular.forEach(t, function(t) {
            t.id == s.attachments[0].serverId && (e.disks[o].cloud = t);
        });
    }
    a.getVolume(), t.volume_promise.promise.then(function(t) {
        console.log(t), e.volumesUsedPercent = t.volumes.used / t.volumes.total, e.gigabytesUsedPercent = t.gigabytes.used / t.gigabytes.total;
    }), s.getCloud(), t.cloud_promise.promise.then(function(s) {
        console.log(s), e.clouds = s.data.servers, o({
            url: "/api/list_volumes",
            headers: t.headers
        }).then(function(s) {
            console.log(s), e.disks = s.data.volumes, angular.forEach(e.disks, function(s, a) {
                "in-use" != s.status && "available" != s.status && "error" != s.status && (console.log(a), 
                e["volumesInterval" + a] = l(function() {
                    o({
                        url: " /api/list_volumes/" + s.id,
                        headers: t.headers
                    }).then(function(t) {
                        console.log(t);
                        var o = t.data.volume.status;
                        e.disks[a].status = o, e.disks[a].attachments = t.data.volume.attachments, 0 != t.data.volume.attachments.length && d(e.clouds, a, t.data.volume), 
                        "in-use" != o && "available" != o && "error" != o || (l.cancel(e["volumesInterval" + a]), 
                        e["volumesInterval" + a] = null);
                    }, function(e) {
                        alert(e.statusText);
                    });
                }, 1e3)), 0 != s.attachments.length && d(e.clouds, a, s);
            });
        }, function(e) {
            alert(e.statusText);
        });
    }), e.deleteDisk = function(s, l, a) {
        confirm("确定删除云硬盘" + s + "吗？") && o({
            url: "/api/list_volumes/" + l,
            method: "DELETE",
            headers: t.headers
        }).then(function(t) {
            console.log(t), alert("删除成功"), e.disks.splice(a, 1);
        }, function(e) {
            alert(e.statusText);
        });
    }, e.formSubmit = function(s) {
        switch (s) {
          case "$formLinkCloud":
            o({
                url: "/api/volume_attach/" + e.selectCloud,
                method: "POST",
                headers: t.headers,
                data: {
                    volumeAttachment: {
                        volumeId: e.diskId,
                        device: "/dev/vdb"
                    }
                }
            }).then(function(e) {
                console.log(e), $("#link_cloud").modal("hide"), n(function() {
                    u.go("storage.couldDisk", {}, {
                        reload: !0
                    });
                }, 500);
            }, function(e) {
                alert(e.statusText);
            });
            break;

          case "$formCutCloud":
            confirm("确定要断开云硬盘" + e.diskName + "吗？") && o({
                url: "/api/volume_attach/" + e.linkedCloud + "/" + e.diskId,
                method: "DELETE",
                headers: t.headers
            }).then(function(e) {
                console.log(e), $("#cut_link").modal("hide"), n(function() {
                    u.go("storage.couldDisk", {}, {
                        reload: !0
                    });
                }, 1e3);
            }, function(e) {
                alert(e.statusText);
            });
        }
    }, e.showModalLinkCloud = function(t) {
        e.selectCloud = "", e.$formLinkCloud.selectCloud.$dirty = !1, e.diskId = t;
    }, e.showModalCutCloud = function(t, o, s) {
        e.linkedCloud = "", e.linkedCloud = t, e.diskId = o, e.diskName = s;
    };
} ]);
//# sourceMappingURL=cloudDisk.min.js.map