/*! cloud - v1.0.0 - 2018-02-07 */
private_cloud.controller("cloudDiskController", [ "$scope", "$rootScope", "$http", "cloud_service", "$interval", "volume_service", "$state", "$timeout", function(e, o, t, l, s, u, a, n) {
    function d(o, t, l) {
        angular.forEach(o, function(o) {
            o.id == l.attachments[0].serverId && (e.disks[t].cloud = o);
        });
    }
    u.getVolume(), o.volume_promise.promise.then(function(o) {
        console.log(o), e.volumesUsedPercent = o.volumes.used / o.volumes.total, e.gigabytesUsedPercent = o.gigabytes.used / o.gigabytes.total;
    }), l.getCloud(), o.cloud_promise.promise.then(function(l) {
        console.log(l), e.clouds = l.data.servers, t({
            url: "/api/list_volumes",
            headers: o.headers
        }).then(function(l) {
            console.log(l), e.disks = l.data.volumes, angular.forEach(e.disks, function(l, u) {
                "in-use" != l.status && "available" != l.status && "error" != l.status && (console.log(u), 
                e["volumesInterval" + u] = s(function() {
                    t({
                        url: " /api/list_volumes/" + l.id,
                        headers: o.headers
                    }).then(function(o) {
                        console.log(o);
                        var t = o.data.volume.status;
                        e.disks[u].status = t, 0 != o.data.volume.attachments.length && d(e.clouds, u, o.data.volume), 
                        "in-use" != t && "available" != t && "error" != t || (s.cancel(e["volumesInterval" + u]), 
                        e["volumesInterval" + u] = null);
                    }, function(e) {
                        alert(e.statusText);
                    });
                }, 1e3)), 0 != l.attachments.length && d(e.clouds, u, l);
            });
        }, function(e) {
            alert(e.statusText);
        });
    }), e.deleteDisk = function(l, s, u) {
        confirm("确定删除云硬盘" + l + "吗？") && t({
            url: "/api/list_volumes/" + s,
            method: "DELETE",
            headers: o.headers
        }).then(function(o) {
            console.log(o), alert("删除成功"), e.disks.splice(u, 1);
        }, function(e) {
            alert(e.statusText);
        });
    }, e.formSubmit = function(l) {
        switch (l) {
          case "$formLinkCloud":
            t({
                url: "/api/volume_attach/" + e.selectCloud,
                method: "POST",
                headers: o.headers,
                data: {
                    volumeAttachment: {
                        volumeId: e.diskId,
                        device: "/dev/vdb"
                    }
                }
            }).then(function(e) {
                console.log(e), $("#link_cloud").modal("hide"), n(function() {
                    a.go("storage.couldDisk", {}, {
                        reload: !0
                    });
                }, 500);
            }, function(e) {
                alert(e.statusText);
            });
            break;

          case "$formCutCloud":
            confirm("确定要断开云硬盘" + e.diskName + "吗？") && t({
                url: "/api/volume_attach/" + e.linkedCloud + "/" + e.diskId,
                method: "DELETE",
                headers: o.headers
            }).then(function(e) {
                console.log(e), $("#cut_link").modal("hide"), n(function() {
                    a.go("storage.couldDisk", {}, {
                        reload: !0
                    });
                }, 1e3);
            }, function(e) {
                alert(e.statusText);
            });
        }
    }, e.showModalLinkCloud = function(o) {
        e.selectCloud = "", e.$formLinkCloud.selectCloud.$dirty = !1, e.diskId = o;
    }, e.showModalCutCloud = function(o, t, l) {
        e.linkedCloud = "", e.linkedCloud = o, e.diskId = t, e.diskName = l;
    };
} ]);
//# sourceMappingURL=cloudDisk.min.js.map