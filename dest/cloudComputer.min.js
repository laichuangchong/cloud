/*! cloud - v1.0.0 - 2018-01-16 */
private_cloud.controller("cloudComputerController", [ "$scope", "$rootScope", "$http", "all_check_service", "$q", function(e, a, o, r, t) {
    e.cloudHost = [], e.network_promise = t.defer(), o({
        url: "/api/list_networks",
        method: "GET",
        headers: a.headers
    }).then(function(a) {
        console.log(a.data.networks), angular.forEach(a.data.networks, function(a, o) {
            switch (a["provider:network_type"]) {
              case "vxlan":
                e.fixedName = a.name;
                break;

              case "flat":
                e.floatingName = a.name;
            }
        }), console.log(e.fixedName), console.log(e.floatingName), e.network_promise.resolve();
    }, function(e) {
        alert(e.data.error.message);
    }), e.network_promise.promise.then(function() {
        o({
            url: "/api/list_servers/detail",
            method: "GET",
            headers: a.headers
        }).then(function(r) {
            console.log(r.data.servers);
            var t = r.data.servers;
            angular.forEach(t, function(r, t) {
                var n = {};
                n.ipData = [], console.log(r.addresses[e.fixedName]);
                var s = r.addresses[e.fixedName];
                angular.forEach(s, function(a, o) {
                    switch (a["OS-EXT-IPS:type"]) {
                      case "fixed":
                        n.ipData.push({
                            name: e.fixedName,
                            addr: a.addr
                        });
                        break;

                      case "floating":
                        n.ipData.push({
                            name: e.floatingName,
                            addr: a.addr
                        });
                    }
                }), n.name = r.name;
                var l = r.image.id;
                o({
                    url: "/api/list_images/" + l,
                    method: "GET",
                    headers: a.headers
                }).then(function(a) {
                    console.log(a.data.image.name), n.imageName = a.data.image.name, e.cloudHost.push(n);
                }, function(e) {
                    alert(e.data.error.message);
                }), o({
                    url: "/api/list_flavors/" + r.flavor.id,
                    method: "GET",
                    headers: a.headers
                }).then(function(e) {
                    console.log(e), n.config = e.data.flavor.name;
                }, function(e) {
                    alert(e.data.error.message);
                });
            });
        }, function(e) {
            alert(e.data.error.message);
        });
    }), e.all_check = !1, console.log(e.all_check), e.allCheck = function(a) {
        r.allCheck(a, e.hostList);
    }, e.itemCheck = function() {
        r.itemCheck(e);
    };
} ]);
//# sourceMappingURL=cloudComputer.min.js.map