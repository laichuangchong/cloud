{"version":3,"sources":["../js/controller/general.js"],"names":["private_cloud","controller","$scope","$rootScope","$http","$q","count_service","get_used_network_promise","defer","getCount","url","method","headers","then","response","console","log","data","quotas","networkTotalData","network","floatingips","title","total","floatingip","unit","routers","router","ports","port","networks","subnets","subnet","resolve","alert","error","message","promise","angular","forEach","value","key","length","used","localStorage","getItem","limits","absolute","storageData","storage","volumes","totalVolumesUsed","maxTotalVolumes","gigabytes","totalGigabytesUsed","maxTotalVolumeGigabytes"],"mappings":";AAIAA,cAAcC,WAAW,uBAAsB,UAAU,cAAc,SAAQ,MAAK,iBAAgB,SAAUC,GAAQC,GAAYC,GAAMC,GAAGC;IACvIJ,EAAOK,2BAA2BF,EAAGG,SACrCF,EAAcG,YACdL;QACIM,KAAK;QACLC,QAAQ;QACRC,SAAQT,EAAWS;OACpBC,KAAK,SAAUC;QACdC,QAAQC,IAAIF,EAASG,KAAKC,OAAO;QACjC,IAAIC,IAAmBL,EAASG,KAAKC,OAAO;QAC5ChB,EAAOkB;YAECC;gBACIC,OAAM;gBACNC,OAAMJ,EAAiBK;gBACvBC,MAAK;;YAETC;gBACIJ,OAAM;gBACNC,OAAMJ,EAAiBQ;gBACvBF,MAAK;;YAETG;gBACIN,OAAM;gBACNC,OAAMJ,EAAiBU;gBACvBJ,MAAK;;YAETK;gBACIR,OAAM;gBACNC,OAAMJ,EAAiBC;gBACvBK,MAAK;;YAETM;gBACIT,OAAM;gBACNC,OAAMJ,EAAiBa;gBACvBP,MAAK;;WAGjBV,QAAQC,IAAId,EAAOkB,UACnBlB,EAAOK,yBAAyB0B;OAClC,SAASnB;QACPC,QAAQC,IAAIF,IACZoB,MAAMpB,EAASG,KAAKkB,MAAMC;QAE9BlC,EAAOK,yBAAyB8B,QAAQxB,KAAK;QAC1CyB,QAAQC,QAAQrC,EAAOkB,SAAQ,SAASoB,GAAMC;YAC1C1B,QAAQC,IAAIyB,IACZrC;gBACIM,KAAK,cAAY+B;gBACjB9B,QAAQ;gBACRC,SAAQT,EAAWS;eACpBC,KAAK,SAAUC;gBACdC,QAAQC,IAAIF,EAASG,KAAKwB,GAAKC,SAC/BxC,EAAOkB,QAAQqB,GAAKE,OAAO7B,EAASG,KAAKwB,GAAKC;eAEhD,SAAS5B;gBACPC,QAAQC,IAAIF,IACZoB,MAAMpB,EAASG,KAAKkB,MAAMC;;;QAKrChC;QACIM,KAAI,wBAAsBkC,aAAaC,QAAQ;QAC/ClC,QAAQ;QACRC,SAAQT,EAAWS;OACpBC,KAAK,SAASC;QACbC,QAAQC,IAAIF,EAASG,KAAK6B,OAAOC;QACjC,IAAIC,IAAclC,EAASG,KAAK6B,OAAOC;QACvC7C,EAAO+C;YACHC;gBACI5B,OAAM;gBACNqB,MAAKK,EAAYG;gBACjB5B,OAAMyB,EAAYI;gBAClB3B,MAAK;;YAET4B;gBACI/B,OAAM;gBACNqB,MAAKK,EAAYM;gBACjB/B,OAAMyB,EAAYO;gBAClB9B,MAAK;;;OAGf,SAASX;QACPoB,MAAMpB,EAASG,KAAKkB,MAAMC","file":"general.min.js","sourcesContent":["/**\n * Created by chenzhongying on 2018/1/5.\n */\n\nprivate_cloud.controller('generalController', ['$scope', '$rootScope', '$http','$q','count_service',function ($scope, $rootScope, $http,$q,count_service) {\n    $scope.get_used_network_promise = $q.defer();\n    count_service.getCount(); //获取云主机防火墙信息\n    $http({ //网络\n        url: '/api/net_quotas',\n        method: 'GET',\n        headers:$rootScope.headers\n    }).then(function (response) {\n        console.log(response.data.quotas[0]);\n        var networkTotalData = response.data.quotas[0];\n        $scope.network =\n            {\n                floatingips:{\n                    title:'公网IP',\n                    total:networkTotalData.floatingip,\n                    unit:'个'\n                },\n                routers:{\n                    title:'路由器',\n                    total:networkTotalData.router,\n                    unit:'个'\n                },\n                ports:{\n                    title:'端口',\n                    total:networkTotalData.port,\n                    unit:'个'\n                },\n                networks:{\n                    title:'网络',\n                    total:networkTotalData.network,\n                    unit:'个'\n                },\n                subnets:{\n                    title:'子网',\n                    total:networkTotalData.subnet,\n                    unit:'个'\n                }\n            };\n        console.log($scope.network);\n        $scope.get_used_network_promise.resolve();\n    },function(response){\n        console.log(response);\n        alert(response.data.error.message);\n    });\n    $scope.get_used_network_promise.promise.then(function(){\n       angular.forEach($scope.network,function(value,key){\n           console.log(key);\n           $http({ //已使用存储\n               url: '/api/net_'+key,\n               method: 'GET',\n               headers:$rootScope.headers\n           }).then(function (response) {\n               console.log(response.data[key].length);\n               $scope.network[key].used = response.data[key].length;\n\n           },function(response){\n               console.log(response);\n               alert(response.data.error.message);\n           });\n       });\n\n    });\n    $http({\n        url:\"/api/volume_limits/\"+localStorage.getItem('project_id'),\n        method: 'GET',\n        headers:$rootScope.headers\n    }).then(function(response){\n        console.log(response.data.limits.absolute);\n        var storageData = response.data.limits.absolute;\n        $scope.storage = {\n            volumes:{\n                title:'云硬盘',\n                used:storageData.totalVolumesUsed,\n                total:storageData.maxTotalVolumes,\n                unit:'个'\n            },\n            gigabytes:{\n                title:'云硬盘容量',\n                used:storageData.totalGigabytesUsed,\n                total:storageData.maxTotalVolumeGigabytes,\n                unit:'GB'\n            }\n        };\n    },function(response){\n        alert(response.data.error.message);\n    });\n}]);"]}