{"version":3,"sources":["../js/controller/general.js"],"names":["private_cloud","controller","$scope","$rootScope","$http","$q","get_used_network_promise","defer","headers","X-Auth-Token","localStorage","getItem","Accept","url","method","then","response","console","log","data","limits","absolute","countData","count","instances","title","used","totalInstancesUsed","total","maxTotalInstances","unit","cores","totalCoresUsed","maxTotalCores","ram","totalRAMUsed","maxTotalRAMSize","safe","security","totalSecurityGroupsUsed","maxSecurityGroups","alert","error","message","quotas","networkTotalData","network","floatingips","floatingip","routers","router","ports","port","networks","subnets","subnet","resolve","promise","angular","forEach","value","key","length"],"mappings":";AAIAA,cAAcC,WAAW,uBAAsB,UAAU,cAAc,SAAQ,MAAK,SAAUC,GAAQC,GAAYC,GAAMC;IACpHH,EAAOI,2BAA2BD,EAAGE,SACrCL,EAAOM;QACHC,gBAAeC,aAAaC,QAAQ;QACpCC,QAAU;OAGdR;QACIS,KAAK;QACLC,QAAQ;QACRN,SAAQN,EAAOM;OAChBO,KAAK,SAAUC;QACdC,QAAQC,IAAIF,EAASG,KAAKC,OAAOC;QACjC,IAAIC,IAAYN,EAASG,KAAKC,OAAOC;QACrCnB,EAAOqB;YACHC;gBACIC,OAAM;gBACNC,MAAKJ,EAAUK;gBACfC,OAAMN,EAAUO;gBAChBC,MAAK;;YAGTC;gBACIN,OAAM;gBACNC,MAAKJ,EAAUU;gBACfJ,OAAMN,EAAUW;gBAChBH,MAAK;;YAETI;gBACIT,OAAM;gBACNC,MAAKJ,EAAUa,eAAa;gBAC5BP,OAAMN,EAAUc,kBAAgB;gBAChCN,MAAK;;WAGb5B,EAAOmC;YACHC;gBACIb,OAAM;gBACNC,MAAKJ,EAAUiB;gBACfX,OAAMN,EAAUkB;gBAChBV,MAAK;;;OAIf,SAASd;QACPC,QAAQC,IAAIF,IACZyB,MAAMzB,EAASG,KAAKuB,MAAMC;QAG9BvC;QACIS,KAAK;QACLC,QAAQ;QACRN,SAAQN,EAAOM;OAChBO,KAAK,SAAUC;QACdC,QAAQC,IAAIF,EAASG,KAAKyB,OAAO;QACjC,IAAIC,IAAmB7B,EAASG,KAAKyB,OAAO;QAC5C1C,EAAO4C;YAECC;gBACItB,OAAM;gBACNG,OAAMiB,EAAiBG;gBACvBlB,MAAK;;YAETmB;gBACIxB,OAAM;gBACNG,OAAMiB,EAAiBK;gBACvBpB,MAAK;;YAETqB;gBACI1B,OAAM;gBACNG,OAAMiB,EAAiBO;gBACvBtB,MAAK;;YAETuB;gBACI5B,OAAM;gBACNG,OAAMiB,EAAiBC;gBACvBhB,MAAK;;YAETwB;gBACI7B,OAAM;gBACNG,OAAMiB,EAAiBU;gBACvBzB,MAAK;;WAGjBb,QAAQC,IAAIhB,EAAO4C,UACnB5C,EAAOI,yBAAyBkD;OAClC,SAASxC;QACPC,QAAQC,IAAIF,IACZyB,MAAMzB,EAASG,KAAKuB,MAAMC;QAE9BzC,EAAOI,yBAAyBmD,QAAQ1C,KAAK;QAC1C2C,QAAQC,QAAQzD,EAAO4C,SAAQ,SAASc,GAAMC;YAC1C5C,QAAQC,IAAI2C,IACZzD;gBACIS,KAAK,cAAYgD;gBACjB/C,QAAQ;gBACRN,SAAQN,EAAOM;eAChBO,KAAK,SAAUC;gBACdC,QAAQC,IAAIF,EAASG,KAAK0C,GAAKC,SAC/B5D,EAAO4C,QAAQe,GAAKnC,OAAOV,EAASG,KAAK0C,GAAKC;eAEhD,SAAS9C;gBACPC,QAAQC,IAAIF,IACZyB,MAAMzB,EAASG,KAAKuB,MAAMC","file":"general.min.js","sourcesContent":["/**\n * Created by chenzhongying on 2018/1/5.\n */\n\nprivate_cloud.controller('generalController', ['$scope', '$rootScope', '$http','$q',function ($scope, $rootScope, $http,$q) {\n    $scope.get_used_network_promise = $q.defer();\n    $scope.headers = {\n        'X-Auth-Token':localStorage.getItem('token'),\n        'Accept': 'application/json'\n    };\n\n    $http({   //计算和防火墙\n        url: '/api/nova_limits',\n        method: 'GET',\n        headers:$scope.headers\n    }).then(function (response) {\n        console.log(response.data.limits.absolute);\n        var countData = response.data.limits.absolute;\n        $scope.count = {\n            instances:{\n                title:'云主机',\n                used:countData.totalInstancesUsed,\n                total:countData.maxTotalInstances,\n                unit:'个'\n\n            },\n            cores:{\n                title:'VCPUs',\n                used:countData.totalCoresUsed,\n                total:countData.maxTotalCores,\n                unit:'个'\n            },\n            ram:{\n                title:'内存',\n                used:countData.totalRAMUsed/1024,\n                total:countData.maxTotalRAMSize/1024,\n                unit:'GB'\n            }\n        };\n        $scope.safe = {\n            security:{\n                title:'防火墙',\n                used:countData.totalSecurityGroupsUsed,\n                total:countData.maxSecurityGroups,\n                unit:'个'\n            }\n        };\n\n    },function(response){\n        console.log(response);\n        alert(response.data.error.message);\n    });\n\n    $http({ //网络\n        url: '/api/net_quotas',\n        method: 'GET',\n        headers:$scope.headers\n    }).then(function (response) {\n        console.log(response.data.quotas[0]);\n        var networkTotalData = response.data.quotas[0];\n        $scope.network =\n            {\n                floatingips:{\n                    title:'公网IP',\n                    total:networkTotalData.floatingip,\n                    unit:'个'\n                },\n                routers:{\n                    title:'路由器',\n                    total:networkTotalData.router,\n                    unit:'个'\n                },\n                ports:{\n                    title:'端口',\n                    total:networkTotalData.port,\n                    unit:'个'\n                },\n                networks:{\n                    title:'网络',\n                    total:networkTotalData.network,\n                    unit:'个'\n                },\n                subnets:{\n                    title:'子网',\n                    total:networkTotalData.subnet,\n                    unit:'个'\n                }\n            };\n        console.log($scope.network);\n        $scope.get_used_network_promise.resolve();\n    },function(response){\n        console.log(response);\n        alert(response.data.error.message);\n    });\n    $scope.get_used_network_promise.promise.then(function(){\n       angular.forEach($scope.network,function(value,key){\n           console.log(key);\n           $http({ //已使用存储\n               url: '/api/net_'+key,\n               method: 'GET',\n               headers:$scope.headers\n           }).then(function (response) {\n               console.log(response.data[key].length);\n               $scope.network[key].used = response.data[key].length;\n\n           },function(response){\n               console.log(response);\n               alert(response.data.error.message);\n           });\n       });\n\n    });\n}]);"]}