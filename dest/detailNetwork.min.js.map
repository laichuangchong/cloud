{"version":3,"sources":["../js/controller/detailNetwork.js"],"names":["private_cloud","controller","$scope","$rootScope","$http","$state","subnets_service","$q","$timeout","network_promise","defer","subNetworks","ports","editPortFormData","url","params","id","headers","then","response","console","log","network","data","resolve","alert","statusText","allPorts","angular","forEach","value","network_id","push","getSubnets","all","promise","subnets_promise","subnets","edit_subNetwork","currentNetwork","subNetworkFormData","name","enable_dhcp","gateway_ip","formSubmit","$event","type","method","subnet","$","modal","go","reload","deleteNetwork","info","key","confirm","splice","edit_port","deletePart"],"mappings":";AAGAA,cAAcC,WAAW,6BAA4B,UAAU,cAAc,SAAS,UAAU,mBAAmB,MAAK,YAAY,SAAUC,GAAQC,GAAYC,GAAOC,GAAQC,GAAiBC,GAAGC;IACjMN,EAAOO,kBAAkBF,EAAGG,SAC5BR,EAAOS,kBACPT,EAAOU,YACPV,EAAOW;IACPT;QACIU,KAAK,uBAAuBT,EAAOU,OAAOC;QAC1CC,SAASd,EAAWc;OACrBC,KAAK,SAAUC;QACdC,QAAQC,IAAIF,IACZjB,EAAOoB,UAAUH,EAASI,KAAKD,SAC/BpB,EAAOO,gBAAgBe,QAAQL,EAASI,KAAKD;OAC9C,SAAUH;QACTM,MAAMN,EAASO;QAEnBtB;QACIU,KAAK;QACLG,SAASd,EAAWc;OACrBC,KAAK,SAAUC;QACdC,QAAQC,IAAIF,IACZjB,EAAOyB,WAAWR,EAASI,KAAKX,OAChCgB,QAAQC,QAAQ3B,EAAOyB,UAAS,SAASG;YAClCA,EAAMC,cAAc1B,EAAOU,OAAOC,MACjCd,EAAOU,MAAMoB,KAAKF;YAG1BV,QAAQC,IAAInB,EAAOU;OACpB,SAAUO;QACTM,MAAMN,EAASO;QAEnBpB,EAAgB2B,cAEhB1B,EAAG2B;QAAKZ,SAAQpB,EAAOO,gBAAgB0B;QAAQxB,aAAYR,EAAWiC,gBAAgBD;OAAUjB,KAAK,SAASK;QAC1GH,QAAQC,IAAIE,EAAKD,UACjBM,QAAQC,QAAQN,EAAKD,QAAQe,SAAQ,SAASP;YAC1CV,QAAQC,IAAIS,IACZF,QAAQC,QAAQN,EAAKZ,aAAY,SAASW;gBACnCA,EAAQN,MAAMc,KACb5B,EAAOS,YAAYqB,KAAKV;;YAIpCF,QAAQC,IAAInB,EAAOS;QAEvBT,EAAOoC,kBAAkB,SAASf;QAC9BrB,EAAOqC,iBAAiBhB,GACxBrB,EAAOsC;YACHC,MAAKlB,EAAKkB;YACVC,aAAYnB,EAAKmB;YACjBC,YAAWpB,EAAKoB;;OAGxBzC,EAAO0C,aAAa,SAASC,GAAOC;QAChC,QAAOA;UACH,KAAK;YACD1B,QAAQC,IAAInB,EAAOsC,qBACnBpC;gBACIU,KAAI,sBAAoBZ,EAAOqC,eAAevB;gBAC9C+B,QAAO;gBACP9B,SAAQd,EAAWc;gBACnBM;oBACIyB,QAAO9C,EAAOsC;;eAEnBtB,KAAK,SAASC;gBACbC,QAAQC,IAAIF,IACZ8B,EAAE,oBAAoBC,MAAM,SAC5B1C,EAAS;oBACLH,EAAO8C,GAAG;wBAA8BC,SAAQ;;mBACjD;eAEL,SAASjC;gBACPM,MAAMN,EAASO;;;OAI/BxB,EAAOmD,gBAAgB,SAASC,GAAKC;QAC9BC,QAAQ,WAASF,EAAKb,OAAK,iBAC1BrC;YACIU,KAAI,sBAAoBwC,EAAKtC;YAC7B+B,QAAO;YACP9B,SAAQd,EAAWc;WACpBC,KAAK,SAASC;YACbC,QAAQC,IAAIF,IACZM,MAAM,SACNvB,EAAOS,YAAY8C,OAAOF,GAAI;WAChC,SAASpC;YACPM,MAAMN,EAASO;;OAK3BxB,EAAOwD,YAAY,SAASJ;QACxBpD,EAAOW;YACHG,IAAGsC,EAAKtC;YACRyB,MAAKa,EAAKb;;OAKlBvC,EAAOyD,aAAa,SAASL,GAAKC;QAC9BnD;YACIU,KAAI,yBAAuBwC,EAAKtC;YAChCC,SAAQd,EAAWc;YACnB8B,QAAO;WACR7B,KAAK,SAASC;YACbC,QAAQC,IAAIF;WACd,SAASA;YACPM,MAAMN,EAASO","file":"detailNetwork.min.js","sourcesContent":["/**\n * Created by chenzhongying on 2018/3/5.\n */\nprivate_cloud.controller('detailNetworkController', ['$scope', '$rootScope', '$http', '$state', 'subnets_service', '$q','$timeout', function ($scope, $rootScope, $http, $state, subnets_service, $q,$timeout) {\n    $scope.network_promise = $q.defer();\n    $scope.subNetworks = [];//相关子网\n    $scope.ports = [];//相关端口\n    $scope.editPortFormData = {};//编辑端口的数据\n    $http({ //获取相关子网\n        url: '/api/net_networks/' + $state.params.id,\n        headers: $rootScope.headers\n    }).then(function (response) {\n        console.log(response);\n        $scope.network = response.data.network;\n        $scope.network_promise.resolve(response.data.network);\n    }, function (response) {\n        alert(response.statusText);\n    });\n    $http({  //获取相关端口\n        url: '/api/net_ports/',\n        headers: $rootScope.headers\n    }).then(function (response) {\n        console.log(response);\n        $scope.allPorts = response.data.ports;\n        angular.forEach($scope.allPorts,function(value){\n            if(value.network_id == $state.params.id){\n                $scope.ports.push(value);\n            }\n        });\n        console.log($scope.ports);\n    }, function (response) {\n        alert(response.statusText);\n    });\n    subnets_service.getSubnets();\n\n    $q.all({network:$scope.network_promise.promise,subNetworks:$rootScope.subnets_promise.promise}).then(function(data){\n        console.log(data.network);\n        angular.forEach(data.network.subnets,function(value){\n            console.log(value);\n            angular.forEach(data.subNetworks,function(network){\n                if(network.id == value){\n                    $scope.subNetworks.push(network);\n                }\n            });\n        });\n        console.log($scope.subNetworks);\n    });\n    $scope.edit_subNetwork = function(data){\n        $scope.currentNetwork = data;\n        $scope.subNetworkFormData = {\n            name:data.name,\n            enable_dhcp:data.enable_dhcp,\n            gateway_ip:data.gateway_ip\n        };\n    };\n    $scope.formSubmit = function($event,type){\n        switch(type){\n            case 'edit_subNetwork':\n                console.log($scope.subNetworkFormData);\n                $http({\n                    url:'/api/net_subnets/'+$scope.currentNetwork.id,\n                    method:'PUT',\n                    headers:$rootScope.headers,\n                    data:{\n                        subnet:$scope.subNetworkFormData\n                    }\n                }).then(function(response){\n                    console.log(response);\n                    $('#edit_subNetwork').modal('hide');\n                    $timeout(function () {\n                        $state.go('network.detailNetwork', {}, {reload: true});\n                    }, 500);\n\n                },function(response){\n                    alert(response.statusText);\n                });\n        }\n    };\n    $scope.deleteNetwork = function(info,key){ //删除网络\n        if(confirm('您确定要删除'+info.name+'吗？该操纵无法撤销。')){\n            $http({\n                url:'/api/net_subnets/'+info.id,\n                method:'DELETE',\n                headers:$rootScope.headers\n            }).then(function(response){\n                console.log(response);\n                alert('删除成功');\n                $scope.subNetworks.splice(key,1);\n            },function(response){\n                alert(response.statusText);\n            });\n        }\n    };\n\n    $scope.edit_port = function(info){ //编辑端口初始化数据\n        $scope.editPortFormData = {\n            id:info.id,\n            name:info.name,\n\n        };\n\n    };\n    $scope.deletePart = function(info,key){ //删除端口\n        $http({\n            url:\"/api/add_routers_if/\"+info.id,\n            headers:$rootScope.headers,\n            method:\"PUT\"\n        }).then(function(response){\n            console.log(response);\n        },function(response){\n            alert(response.statusText);\n        });\n    };\n}]);"]}