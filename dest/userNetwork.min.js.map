{"version":3,"sources":["../js/controller/userNetwork.js"],"names":["private_cloud","controller","$scope","$rootScope","$http","subnets_service","$timeout","$state","subNetworkFormData","enable_dhcp","ip_version","getSubnets","subnets_promise","promise","then","data","url","headers","response","console","log","networks","angular","forEach","value","key","subnetInfo","subnets","subvalue","subnetvalue","id","push","alert","statusText","editData","networkId","editNetFormData","name","admin_state_up","String","createSubNetwork","info","currentNetwork","network_id","formSubmit","$event","type","method","network","$","modal","go","reload","subnet","deleteNetwork","confirm"],"mappings":";AAGAA,cAAcC,WAAW,2BAA0B,UAAU,cAAc,SAAS,mBAAmB,YAAY,UAAU,SAAUC,GAAQC,GAAYC,GAAOC,GAAiBC,GAAUC;IACzLL,EAAOM;QACHC,cAAa;QACbC,YAAY;OAEhBL,EAAgBM,cAChBR,EAAWS,gBAAgBC,QAAQC,KAAK,SAAUC;QAC9CX;YACIY,KAAK;YACLC,SAASd,EAAWc;WACrBH,KAAK,SAAUI;YACdC,QAAQC,IAAIF,IACZhB,EAAOmB,WAAWH,EAASH,KAAKM,UAChCC,QAAQC,QAAQrB,EAAOmB,UAAU,SAAUG,GAAOC;gBAC9CvB,EAAOmB,SAASI,GAAKC,iBACrBJ,QAAQC,QAAQC,EAAMG,SAAS,SAAUC;oBACrCN,QAAQC,QAAQR,GAAM,SAAUc;wBACxBD,KAAYC,EAAYC,MACxB5B,EAAOmB,SAASI,GAAKC,WAAWK,KAAKF;;;;WAOtD,SAAUX;YACTc,MAAMd,EAASe;;QAGvB/B,EAAOgC,WAAW,SAAUnB;QACxBI,QAAQC,IAAIL,IACZb,EAAOiC,YAAYpB,EAAKe,IACxB5B,EAAOkC;YACHC,MAAMtB,EAAKsB;YACXC,gBAAgBC,OAAOxB,EAAKuB;;OAGpCpC,EAAOsC,mBAAmB,SAAUC;QAChCvC,EAAOwC,iBAAiBD,GACxBvC,EAAOM;YACHC,cAAa;YACbkC,YAAYF,EAAKX;YACjBpB,YAAY;;OAGpBR,EAAO0C,aAAa,SAAUC,GAAQC;QAClC,QAAQA;UACJ,KAAK;YACD1C;gBACIY,KAAK,uBAAuBd,EAAOiC;gBACnCY,QAAQ;gBACR9B,SAASd,EAAWc;gBACpBF;oBACIiC,SAAW9C,EAAOkC;;eAEvBtB,KAAK,SAAUI;gBACdC,QAAQC,IAAIF,IACZ+B,EAAE,iBAAiBC,MAAM,SACzB5C,EAAS;oBACLC,EAAO4C,GAAG;wBAA4BC,SAAQ;;mBAC/C;eACJ,SAAUlC;gBACTc,MAAMd,EAASe;;YAEnB;;UACJ,KAAK;YACD7B;gBACIY,KAAK;gBACL+B,QAAQ;gBACR9B,SAASd,EAAWc;gBACpBF;oBACIsC,QAAQnD,EAAOM;;eAEpBM,KAAK,SAAUI;gBACdC,QAAQC,IAAIF,IACZ+B,EAAE,sBAAsBC,MAAM,SAC9B5C,EAAS;oBACLC,EAAO4C,GAAG;wBAA4BC,SAAQ;;mBAC/C;eACJ,SAAUlC;gBACTC,QAAQC,IAAIF,EAASe;;;OAKrC/B,EAAOoD,gBAAgB,SAASb;QACzBc,QAAQ,WAASd,EAAKJ,OAAK,iBAC1BjC;YACIY,KAAI,sBAAoByB,EAAKX;YAC7BiB,QAAO;YACP9B,SAAQd,EAAWc;WACpBH,KAAK,SAASI;YACbC,QAAQC,IAAIF;WACd,SAASA;YACPc,MAAMd,EAASe","file":"userNetwork.min.js","sourcesContent":["/**\n * Created by chenzhongying on 2018/2/8.\n */\nprivate_cloud.controller('userNetworkController', ['$scope', '$rootScope', '$http', 'subnets_service', '$timeout', '$state', function ($scope, $rootScope, $http, subnets_service, $timeout, $state) {\n    $scope.subNetworkFormData = { //添加子网初始值\n        enable_dhcp: true, //激活DHCP\n        ip_version: 4\n    };\n    subnets_service.getSubnets();\n    $rootScope.subnets_promise.promise.then(function (data) {\n        $http({\n            url: '/api/net_networks/',\n            headers: $rootScope.headers\n        }).then(function (response) {\n            console.log(response);\n            $scope.networks = response.data.networks;\n            angular.forEach($scope.networks, function (value, key) {\n                $scope.networks[key].subnetInfo = [];\n                angular.forEach(value.subnets, function (subvalue) {\n                    angular.forEach(data, function (subnetvalue) {\n                        if (subvalue == subnetvalue.id) {\n                            $scope.networks[key].subnetInfo.push(subnetvalue);\n                        }\n                    });\n                   \n                });\n            });\n            // $scope.networks = response.data.networks;\n        }, function (response) {\n            alert(response.statusText);\n        });\n    });\n    $scope.editData = function (data) { //编辑网络弹出框初始信息\n        console.log(data);\n        $scope.networkId = data.id;\n        $scope.editNetFormData = {\n            name: data.name,\n            admin_state_up: String(data.admin_state_up)\n        };\n    };\n    $scope.createSubNetwork = function (info) { //创建子网弹出框信息\n        $scope.currentNetwork = info;\n        $scope.subNetworkFormData = { //重现初始化\n            enable_dhcp: true,\n            network_id: info.id,\n            ip_version: 4\n        };\n    };\n    $scope.formSubmit = function ($event, type) {\n        switch (type) {\n            case 'editNetwork':\n                $http({\n                    url: '/api/net_networks/' + $scope.networkId,\n                    method: 'PUT',\n                    headers: $rootScope.headers,\n                    data: {\n                        \"network\": $scope.editNetFormData\n                    }\n                }).then(function (response) {\n                    console.log(response);\n                    $('#edit_network').modal('hide');\n                    $timeout(function () {\n                        $state.go('network.userNetwork', {}, {reload: true});\n                    }, 500);\n                }, function (response) {\n                    alert(response.statusText);\n                });\n                break;\n            case 'subNetwork':\n                $http({\n                    url: '/api/net_subnets/',\n                    method: 'POST',\n                    headers: $rootScope.headers,\n                    data: {\n                        subnet: $scope.subNetworkFormData\n                    }\n                }).then(function (response) {\n                    console.log(response);\n                    $('#create_subNetwork').modal('hide');\n                    $timeout(function () {\n                        $state.go('network.userNetwork', {}, {reload: true});\n                    }, 500);\n                }, function (response) {\n                    console.log(response.statusText);\n                });\n                break;\n        }\n    };\n    $scope.deleteNetwork = function(info){ //删除网络\n        if(confirm('您确定要删除'+info.name+'吗？该操纵无法撤销。')){\n            $http({\n                url:'/api/net_subnets/'+info.id,\n                method:'DELETE',\n                headers:$rootScope.headers\n            }).then(function(response){\n                console.log(response);\n            },function(response){\n                alert(response.statusText);\n            });\n        }\n    };\n}]);"]}