/*! cloud - v1.0.0 - 2018-03-16 */
private_cloud.controller("detailNetworkController", [ "$scope", "$rootScope", "$http", "$state", "subnets_service", "$q", "$timeout", function(e, t, o, r, n, s, a) {
    e.network_promise = s.defer(), e.subNetworks = [], e.ports = [], e.editPortFormData = {}, 
    o({
        url: "/api/net_networks/" + r.params.id,
        headers: t.headers
    }).then(function(t) {
        console.log(t), e.network = t.data.network, e.network_promise.resolve(t.data.network);
    }, function(e) {
        alert(e.statusText);
    }), o({
        url: "/api/net_ports/",
        headers: t.headers
    }).then(function(t) {
        console.log(t), e.allPorts = t.data.ports, angular.forEach(e.allPorts, function(t) {
            t.network_id == r.params.id && e.ports.push(t);
        }), console.log(e.ports);
    }, function(e) {
        alert(e.statusText);
    }), n.getSubnets(), s.all({
        network: e.network_promise.promise,
        subNetworks: t.subnets_promise.promise
    }).then(function(t) {
        console.log(t.network), angular.forEach(t.network.subnets, function(o) {
            console.log(o), angular.forEach(t.subNetworks, function(t) {
                t.id == o && e.subNetworks.push(t);
            });
        }), console.log(e.subNetworks);
    }), e.edit_subNetwork = function(t) {
        e.currentNetwork = t, e.subNetworkFormData = {
            name: t.name,
            enable_dhcp: t.enable_dhcp,
            gateway_ip: t.gateway_ip
        };
    }, e.formSubmit = function(n, s) {
        switch (s) {
          case "edit_subNetwork":
            console.log(e.subNetworkFormData), o({
                url: "/api/net_subnets/" + e.currentNetwork.id,
                method: "PUT",
                headers: t.headers,
                data: {
                    subnet: e.subNetworkFormData
                }
            }).then(function(e) {
                console.log(e), $("#edit_subNetwork").modal("hide"), a(function() {
                    r.go("network.detailNetwork", {}, {
                        reload: !0
                    });
                }, 500);
            }, function(e) {
                alert(e.statusText);
            });
        }
    }, e.deleteNetwork = function(r, n) {
        confirm("您确定要删除" + r.name + "吗？该操纵无法撤销。") && o({
            url: "/api/net_subnets/" + r.id,
            method: "DELETE",
            headers: t.headers
        }).then(function(t) {
            console.log(t), alert("删除成功"), e.subNetworks.splice(n, 1);
        }, function(e) {
            alert(e.statusText);
        });
    }, e.edit_port = function(t) {
        e.editPortFormData = {
            id: t.id,
            name: t.name
        };
    }, e.deletePart = function(e, r) {
        o({
            url: "/api/rm_routers_if/" + e.id,
            headers: t.headers,
            method: "PUT"
        }).then(function(e) {
            console.log(e);
        }, function(e) {
            alert(e.statusText);
        });
    };
} ]);
//# sourceMappingURL=detailNetwork.min.js.map