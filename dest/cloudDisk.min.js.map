{"version":3,"sources":["../js/controller/cloudDisk.js"],"names":["private_cloud","controller","$scope","$rootScope","$http","cloud_service","$interval","volume_service","$state","$timeout","searchCloud","clouds","key","odj","angular","forEach","cloudValue","id","attachments","serverId","disks","cloud","diskStatus","in-use","available","creating","deleting","detaching","attaching","error","getVolume","volume_promise","promise","then","data","console","log","volumesUsedPercent","volumes","used","total","gigabytesUsedPercent","gigabytes","getCloud","cloud_promise","response","servers","url","headers","value","status","volume","length","cancel","alert","statusText","deleteDisk","diskName","diskId","confirm","method","splice","formSubmit","formName","selectCloud","volumeAttachment","volumeId","device","$","modal","go","reload","linkedCloud","showModalLinkCloud","$formLinkCloud","$dirty","showModalCutCloud"],"mappings":"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","file":"cloudDisk.min.js","sourcesContent":["/**\n * Created by chenzhongying on 2018/1/16.\n */\nprivate_cloud.controller('cloudDiskController',['$scope','$rootScope','$http','cloud_service','$interval','volume_service',\n    '$state','$timeout',function($scope,$rootScope,$http,cloud_service,$interval,volume_service,$state,$timeout){\n    $scope.diskStatus = {\n        \"in-use\":'已挂载',\n        available:'可用',\n        creating:'正在创建',\n        deleting:'删除中',\n        detaching:'分离中',\n        attaching:'连接中',\n        error:'错误'\n    };\n\n    function searchCloud(clouds,key,odj){ //查看绑定云主机名称\n        angular.forEach(clouds,function(cloudValue){\n            if(cloudValue.id == odj.attachments[0].serverId) {\n                $scope.disks[key].cloud = cloudValue;\n            }\n        });\n    }\n\n    volume_service.getVolume(); //获取云硬盘使用情况相关信息\n    $rootScope.volume_promise.promise.then(function (data) {\n        console.log(data);\n        $scope.volumesUsedPercent =  data.volumes.used/data.volumes.total;\n        $scope.gigabytesUsedPercent =  data.gigabytes.used/data.gigabytes.total;\n    });\n    cloud_service.getCloud(); //获取云主机信息\n    $rootScope.cloud_promise.promise.then(function (response) {\n        console.log(response);\n        $scope.clouds = response.data.servers;\n        $http({ //云硬盘列表\n            url:'/api/list_volumes',\n            headers:$rootScope.headers\n        }).then(function(response){\n            console.log(response);\n            $scope.disks = response.data.volumes;\n            angular.forEach($scope.disks,function(value,key){\n                if((value.status != \"in-use\") && (value.status !=\"available\") && (value.status !='error')){\n                    console.log(key);\n                    $scope['volumesInterval' + key] = $interval(function () {\n                        $http({\n                            url: ' /api/list_volumes/'+value.id,\n                            headers: $rootScope.headers\n                        }).then(function (response) {\n                            console.log(response);\n                            var status = response.data.volume.status;\n                            $scope.disks[key].status = status;\n                            if( response.data.volume.attachments.length != 0){\n                                searchCloud($scope.clouds,key,response.data.volume);\n                            }\n                            if ((status == \"in-use\") || (status == \"available\") || (status == 'error')) {\n                                $interval.cancel($scope['volumesInterval' + key]);\n                                $scope['volumesInterval' + key] = null;\n                            }\n                        },function(response){\n                            alert(response.statusText);\n                        });\n                    }, 1000);\n                }\n                if(value.attachments.length != 0){\n                    searchCloud($scope.clouds,key,value);\n                }\n            });\n\n        },function(response){\n            alert(response.statusText);\n        });\n    });\n\n\n\n    $scope.deleteDisk = function(diskName,diskId,key){ //删除云硬盘\n        if(confirm('确定删除云硬盘'+diskName+'吗？')){\n            $http({ //云硬盘列表\n                url:'/api/list_volumes/'+diskId,\n                method:'DELETE',\n                headers:$rootScope.headers\n            }).then(function(response){\n                console.log(response);\n                alert('删除成功');\n                $scope.disks.splice(key,1);\n            },function(response){\n                alert(response.statusText);\n            });\n        }\n    };\n    $scope.formSubmit = function(formName){\n        switch(formName){\n            case \"$formLinkCloud\": //绑定云主机\n                $http({\n                    url:'/api/volume_attach/'+$scope.selectCloud,\n                    method:'POST',\n                    headers:$rootScope.headers,\n                    data:{\n                        \"volumeAttachment\": {\n                            \"volumeId\": $scope.diskId,\n                            \"device\": \"/dev/vdb\"\n                        }\n                    }\n                }).then(function(response){\n                    console.log(response);\n                    $('#link_cloud').modal('hide');\n                    $timeout(function(){\n                        $state.go('storage.couldDisk',{},{reload: true});\n                    },500);\n                },function(response){\n                    alert(response.statusText);\n                });\n                break;\n            case '$formCutCloud': //断开连接云主机\n                if(confirm('确定要断开云硬盘'+$scope.diskName+'吗？')){\n                    $http({\n                        url:'/api/volume_attach/'+$scope.linkedCloud+'/'+$scope.diskId,\n                        method:'DELETE',\n                        headers:$rootScope.headers,\n                    }).then(function(response){\n                        console.log(response);\n                        $('#cut_link').modal('hide');\n                        $timeout(function(){\n                            $state.go('storage.couldDisk',{},{reload: true});\n                        },1000);\n                    },function(response){\n                        alert(response.statusText);\n                    });\n                }\n                break;\n        }\n    };\n    $scope.showModalLinkCloud = function(diskId){ //编辑挂载弹出框\n        $scope.selectCloud = '';\n        $scope.$formLinkCloud.selectCloud.$dirty = false;\n        $scope.diskId = diskId; //当前操作云硬盘ID\n    };\n    $scope.showModalCutCloud = function(linkedCloud,diskId,diskName){ //编辑挂载弹出框\n        $scope.linkedCloud = '';\n        $scope.linkedCloud = linkedCloud; //当前操作云硬盘绑定云主机ID\n        $scope.diskId = diskId; //当前操作云硬盘ID\n        $scope.diskName = diskName; //当前操作云硬盘ID\n\n    };\n    \n}]);"]}