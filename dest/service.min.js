/*! cloud - v1.0.0 - 2018-02-01 */
private_cloud.service("tokenService", [ "$http", "$rootScope", "$timeout", function(t, e, o) {
    return {
        getToken: function(o, a) {
            t({
                url: "./apiv1",
                headers: {
                    "Content-Type": "application/json"
                },
                method: "POST",
                data: {
                    auth: {
                        identity: {
                            methods: [ "password" ],
                            password: {
                                user: {
                                    name: o,
                                    domain: {
                                        name: "Default"
                                    },
                                    password: a
                                }
                            }
                        },
                        scope: {
                            project: {
                                name: "admin",
                                domain: {
                                    name: "Default"
                                }
                            }
                        }
                    }
                }
            }).then(function(t) {
                console.log(t), window.localStorage.setItem("token", t.headers()["x-subject-token"]), 
                window.localStorage.setItem("project_id", t.data.token.project.id), window.localStorage.setItem("username", o), 
                window.localStorage.setItem("password", a), e.token_promise.resolve(t.headers()["x-subject-token"]);
            }, function(t) {
                alert(t.data.error.message);
            });
        }
    };
} ]), private_cloud.service("all_check_service", function() {
    return {
        allCheck: function(t, e) {
            t ? angular.forEach(e, function(t, e) {
                t.check_status = !0;
            }) : angular.forEach(e, function(t, e) {
                t.check_status = !1;
            });
        },
        itemCheck: function(t, e) {
            var o = !0;
            angular.forEach(e, function(e, a) {
                e.check_status || (t.all_check = !1, o = !1);
            }), o && (t.all_check = !0);
        }
    };
}), private_cloud.service("less_one_service", function() {
    return {
        change: function(t) {
            var e = !1;
            return angular.forEach(t, function(t, o) {
                t && (e = !0);
            }), !!e;
        }
    };
}), private_cloud.service("count_service", [ "$http", "$rootScope", function(t, e) {
    return {
        getCount: function() {
            e.token_promise.promise.then(function() {
                t({
                    url: "/api/nova_limits",
                    method: "GET",
                    headers: e.headers
                }).then(function(t) {
                    console.log(t.data.limits.absolute);
                    var o = t.data.limits.absolute;
                    e.count = {
                        instances: {
                            title: "云主机",
                            used: o.totalInstancesUsed,
                            total: o.maxTotalInstances,
                            unit: "个"
                        },
                        cores: {
                            title: "VCPUs",
                            used: o.totalCoresUsed,
                            total: o.maxTotalCores,
                            unit: "个"
                        },
                        ram: {
                            title: "内存",
                            used: o.totalRAMUsed / 1024,
                            total: o.maxTotalRAMSize / 1024,
                            unit: "GB"
                        }
                    }, e.safe = {
                        security: {
                            title: "防火墙",
                            used: o.totalSecurityGroupsUsed,
                            total: o.maxSecurityGroups,
                            unit: "个"
                        }
                    };
                }, function(t) {
                    alert(t.statusText);
                });
            });
        }
    };
} ]);
//# sourceMappingURL=service.min.js.map