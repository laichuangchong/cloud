{"version":3,"sources":["../js/service.js"],"names":["private_cloud","service","$http","$rootScope","$timeout","getToken","userName","password","url","headers","Content-Type","method","data","auth","identity","methods","user","name","domain","scope","project","then","response","console","log","window","localStorage","setItem","token","id","token_promise","resolve","alert","error","message","allCheck","status","item_obj","angular","forEach","value","key","check_status","itemCheck","obj","mark","all_check","change","getCount","limits","absolute","countData","count","instances","title","used","totalInstancesUsed","total","maxTotalInstances","unit","cores","totalCoresUsed","maxTotalCores","ram","totalRAMUsed","maxTotalRAMSize","safe","security","totalSecurityGroupsUsed","maxSecurityGroups","statusText","getCloud","cloud_promise","getImages","images","images_promise"],"mappings":"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","file":"service.min.js","sourcesContent":["/**\n * Created by chenzhongying on 2018/1/9.\n */\nprivate_cloud.service('tokenService', ['$http', '$rootScope', '$timeout', function ($http, $rootScope, $timeout) {\n    return {\n        /*\"user\": {\n         \"name\": \"admin\",\n         \"domain\": {\n         \"name\": \"Default\"\n         },\n         \"password\": \"openstack\"\n         }*/\n        getToken: function (userName, password) { //登录服务用账号\n            $http({\n                url: './apiv1',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                data: {\n                    \"auth\": {\n                        \"identity\": {\n                            \"methods\": [\n                                \"password\"\n                            ],\n                            \"password\": {\n                                \"user\": {\n                                    \"name\": userName,\n                                    \"domain\": {\n                                        \"name\": \"Default\"\n                                    },\n                                    \"password\": password\n                                }\n                            }\n                        },\n                        \"scope\": {\n                            \"project\": {\n                                \"name\": \"admin\",\n                                \"domain\": {\n                                    \"name\": \"Default\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }).then(function (response) {\n                console.log(response);\n                window.localStorage.setItem('token', response.headers()['x-subject-token']);\n                window.localStorage.setItem('project_id', response.data.token.project.id);\n                window.localStorage.setItem('username', userName);//用户名\n                window.localStorage.setItem('password', password);//密码\n                $rootScope.token_promise.resolve(response.headers()['x-subject-token']);\n\n            }, function (response) {\n                alert(response.data.error.message);\n            });\n        }\n    };\n\n}]);\nprivate_cloud.service('all_check_service', function () { //全选\n    return {\n        allCheck: function (status, item_obj) {\n            if (status) {\n                angular.forEach(item_obj, function (value, key) {\n                    value.check_status = true;\n                });\n\n            } else {\n                angular.forEach(item_obj, function (value, key) {\n                    value.check_status = false;\n                });\n            }\n        },\n        itemCheck: function (obj, item_obj) {\n            var mark = true;\n            angular.forEach(item_obj, function (value, key) {\n                if (!value.check_status) {\n                    obj.all_check = false;\n                    mark = false;\n                }\n            });\n            if (mark) {\n                obj.all_check = true;\n            }\n        }\n    };\n});\nprivate_cloud.service('less_one_service', function () { //至少选择一项\n    return {\n        change: function (data) {\n            var mark = false;\n            angular.forEach(data, function (value, key) {\n                if (value) {\n                    mark = true;\n                }\n            });\n            if (mark) { \n                return true;\n\n            } else {\n                return false;\n            }\n        }\n    };\n});\nprivate_cloud.service('count_service', ['$http','$rootScope', function ($http,$rootScope) { //计算和防火墙\n        return {\n            getCount: function () {\n                    $http({\n                        url: '/api/nova_limits',\n                        method: 'GET',\n                        headers: $rootScope.headers\n                    }).then(function (response) {\n                        console.log(response.data.limits.absolute);\n                        var countData = response.data.limits.absolute;\n                        $rootScope.count = {\n                            instances: {\n                                title: '云主机',\n                                used: countData.totalInstancesUsed,\n                                total: countData.maxTotalInstances,\n                                unit: '个'\n\n                            },\n                            cores: {\n                                title: 'VCPUs',\n                                used: countData.totalCoresUsed,\n                                total: countData.maxTotalCores,\n                                unit: '个'\n                            },\n                            ram: {\n                                title: '内存',\n                                used: countData.totalRAMUsed / 1024,\n                                total: countData.maxTotalRAMSize / 1024,\n                                unit: 'GB'\n                            }\n                        };\n                        $rootScope.safe = {\n                            security:{\n                                title:'防火墙',\n                                used:countData.totalSecurityGroupsUsed,\n                                total:countData.maxSecurityGroups,\n                                unit:'个'\n                            }\n                        };\n\n                    }, function (response) {\n                        alert(response.statusText);\n                    });\n            }\n        };\n    }]\n);\nprivate_cloud.service('cloud_service', ['$http','$rootScope', function ($http,$rootScope) { //云主机\n        return {\n            getCloud: function () {\n                $http({\n                    url: \"/api/list_servers/detail\", //获取云主机列表\n                    method: 'GET',\n                    headers: $rootScope.headers\n                }).then(function (response) {\n                    console.log(response);\n                    alert('promise');\n                    $rootScope.cloud_promise.resolve(response);\n                },function(response){\n                    alert(response.statusText);\n                });\n            }\n        };\n    }]\n);\nprivate_cloud.service('images_service', ['$http','$rootScope', function ($http,$rootScope) { //镜像\n        return {\n            getImages: function () { //获取镜像\n                $http({ \n                    url: \"/api/list_images\",\n                    method: 'GET',\n                    headers: $rootScope.headers\n                }).then(function (response) {\n                    console.log(response.data.images);\n                    // $rootScope.images = response.data.images;//所有镜像列表\n                    $rootScope.images_promise.resolve(response);\n                }, function (response) {\n                    alert(response.data.error.message);\n                });\n            }\n        };\n    }]\n);"]}