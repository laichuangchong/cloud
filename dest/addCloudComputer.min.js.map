{"version":3,"sources":["../js/controller/addCloudComputer.js"],"names":["private_cloud","controller","$scope","$rootScope","$http","$state","less_one_service","count_service","images_service","formData","computerCount","net_work","security","params","imageid","imageRef","getCount","getImages","images_promise","promise","then","response","console","log","images","data","changeConfig","flavorRef","coresChangeProgress","vcpus","ramChangeProgress","ram","formSubmit","$event","preventDefault","networks","push","name","angular","forEach","value","key","uuid","id","url","method","headers","server","availability_zone","OS-DCF:diskConfig","security_groups","min_count","status","alert","go","statusText","changeNetworkMark","changeNetwork","lessone","change"],"mappings":";AAGAA,cAAcC,WAAW,gCAA8B,UAAS,cAAa,SAAQ,UAAS,oBAAmB,iBAAgB,kBAAiB,SAASC,GAAOC,GAAWC,GAAMC,GAAOC,GAAiBC,GAAcC;IAErNN,EAAOO;QACHC,eAAc;QACdC;QACAC,WAAS;OAEVP,EAAOQ,OAAOC,YACbZ,EAAOO,SAASM,WAAWV,EAAOQ,OAAOC,UAE7CP,EAAcS,YACdR,EAAeS;IACfd,EAAWe,eAAeC,QAAQC,KAAK,SAASC;QAC5CC,QAAQC,IAAIF,IACZnB,EAAOsB,SAASH,EAASI,KAAKD;QAElCtB,EAAOwB,eAAe,SAAUC;QAC5BL,QAAQC,IAAII,IACZzB,EAAO0B,sBAAsBD,EAAUE,OACvC3B,EAAO4B,oBAAoBH,EAAUI,MAAM;OAI/C7B,EAAO8B,aAAa,SAASC;QACzBA,EAAOC;QACP,IAAItB,QAAeuB;QAEhBjC,EAAOO,SAASG,YACfA,EAASwB;YACLC,MAAQ;YAGhBC,QAAQC,QAAQrC,EAAOO,SAASE,UAAS,SAAS6B,GAAMC;YACjDD,KACCL,EAASC;gBACLM,MAAQvC,EAAWQ,SAAS8B,GAAKE;;YAI7CrB,QAAQC,IAAIY,IACZ/B;YACIwC,KAAK;YACLC,QAAQ;YACRC,SAAS3C,EAAW2C;YACpBrB;gBACIsB;oBACIV,MAASnC,EAAOO,SAAS4B;oBACzBtB,UAAab,EAAOO,SAASM;oBAC7BY,WAAczB,EAAOO,SAASkB,UAAUgB;oBACxCK,mBAAqB;oBACrBC,qBAAqB;oBACrBC,iBAAmBtC;oBACnBuB,UAAWA;oBACXgB,WAAajD,EAAOO,SAASC;;;WAKtCU,KAAK,SAASC;YACbC,QAAQC,IAAIF,IACU,OAAnBA,EAAS+B,WACRC,MAAM,SACNhD,EAAOiD,GAAG;WAEhB,SAASjC;YACPgC,MAAMhC,EAASkC;;OAIvBrD,EAAOsD,oBAAoB;QAEvBtD,EAAOuD,iBAAgB,GACvBnC,QAAQC,IAAIrB,EAAOuD;OAGvBvD,EAAOwD,UAAU,SAASjC;QACtB,OAAOnB,EAAiBqD,OAAOlC","file":"addCloudComputer.min.js","sourcesContent":["/**\n * Created by chenzhongying on 2018/1/11.\n */\nprivate_cloud.controller('addCloudComputerController',['$scope','$rootScope','$http','$state','less_one_service','count_service','images_service',function($scope,$rootScope,$http,$state,less_one_service,count_service,images_service){\n\n    $scope.formData = { //创建云主机数据\n        computerCount:1,\n        net_work : [],\n        security:true\n    };\n    if($state.params.imageid){ //如果是备份页面来的就指定镜像名称\n        $scope.formData.imageRef = $state.params.imageid;\n    }\n    count_service.getCount();//更新云主机信息\n    images_service.getImages(); //获取镜像\n    $rootScope.images_promise.promise.then(function(response){\n        console.log(response);\n        $scope.images = response.data.images;\n    });\n    $scope.changeConfig = function (flavorRef) { //进度条\n        console.log(flavorRef);\n        $scope.coresChangeProgress = flavorRef.vcpus; //vcpus\n        $scope.ramChangeProgress = flavorRef.ram / 1024 ; //内存\n    };\n    \n\n    $scope.formSubmit = function($event){\n        $event.preventDefault();\n        var security = [], networks = []; //防火墙类型/网络类型\n        \n        if($scope.formData.security){\n            security.push ({\n                \"name\": \"default\"\n            });\n        }\n        angular.forEach($scope.formData.net_work,function(value,key){\n            if(value){\n                networks.push({\n                    \"uuid\": $rootScope.net_work[key].id\n                });\n            }\n        });\n        console.log(networks);\n        $http({\n            url: \"/api/list_servers/\", //添加云主机\n            method: 'POST',\n            headers: $rootScope.headers,\n            data:{\n                \"server\" : {\n                    \"name\" : $scope.formData.name,\n                    \"imageRef\" : $scope.formData.imageRef,\n                    \"flavorRef\" : $scope.formData.flavorRef.id,\n                    \"availability_zone\": \"nova\",\n                    \"OS-DCF:diskConfig\": \"AUTO\",\n                    \"security_groups\": security, //防火墙\n                    \"networks\":networks,//网络类型\n                    \"min_count\": $scope.formData.computerCount\n                }\n\n            }\n\n        }).then(function(response){\n            console.log(response);\n            if(response.status == 202){\n                alert('添加成功');\n                $state.go(\"count.cloudComputer\");\n            }\n        },function(response){\n            alert(response.statusText);\n        });\n    };\n   \n    $scope.changeNetworkMark = function(){ //标示有无操作\n\n        $scope.changeNetwork = true;\n        console.log($scope.changeNetwork);\n    };\n    \n    $scope.lessone = function(data){\n        return less_one_service.change(data);\n\n    };\n\n}]);"]}