{"version":3,"sources":["../js/controller/wallRule.js"],"names":["private_cloud","controller","$rootScope","$scope","$http","$state","$timeout","console","log","direction","ingress","egress","ruleItems","name","type","value","directionItems","portItems","remoteItems","selectItem","port","type1","ruleType","formData","protocol","ethertype","remote_ip_prefix","security_group_id","params","id","changeRule","type2","type3","type4","url","headers","then","response","data","security_group","rules","security_group_rules","alert","statusText","deleteRule","ruleId","ruleName","confirm","method","formSubmit","$event","preventDefault","port_range_min","icmpType","port_range_max","icmpCode","security_group_rule","$","modal","go","reload"],"mappings":"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","file":"wallRule.min.js","sourcesContent":["/**\n * Created by chenzhongying on 2018/2/6.\n */\nprivate_cloud.controller('wallRuleController', ['$rootScope', '$scope', '$http', '$state', '$timeout', function ($rootScope, $scope, $http, $state, $timeout) {\n    console.log($state);\n    $scope.direction = {\n        \"ingress\": '入口',\n        \"egress\": '出口'\n    };\n    //添加规则选项\n    $scope.ruleItems = [\n        {\n            name: '定制TCP规则',\n            type: 'type1',\n            value: 'tcp'\n\n        },\n        {\n            name: '定制UDP规则',\n            type: 'type1',\n            value: 'udp'\n        },\n        {\n            name: '定制ICMP规则',\n            type: 'type2',\n            value: 'icmp'\n        },\n        {\n            name: 'ALL ICMP',\n            type: 'type3',\n            value: 'all_icmp'\n        },\n        {\n            name: 'ALL TCP',\n            type: 'type3',\n            value: 'all_tcp'\n        },\n        {\n            name: 'ALL UDP',\n            type: 'type3',\n            value: 'all_udp'\n        },\n        {\n            name: 'DNS',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'HTTP',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'HTTPS',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'IMAP',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'IMAPS',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'LDAP',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'MS SQL',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'MYSQL',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'POP3',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'POP3S',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'RDP',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'SMTP',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'SMTPS',\n            type: 'type4',\n            value: 'tcp'\n        },\n        {\n            name: 'SSH',\n            type: 'type4',\n            value: 'tcp'\n        }\n    ]; //规则\n    $scope.directionItems = [ //方向\n        {\n            name: '入口',\n            value: 'ingress'\n        },\n        {\n            name: '出口',\n            value: 'egress'\n        }\n    ];\n    $scope.portItems = [ //打开端口\n        {\n            name: '端口',\n            value: 'port'\n        },\n        {\n            name: '端口范围',\n            value: 'range'\n        }\n    ];\n    $scope.remoteItems = [ //远程\n        {\n            name: 'CIDR',\n            value: 'cidr'\n        },\n        /*{\n         name:'防火墙',\n         value:'sg'\n         }*/\n    ];\n    $scope.selectItem = {\n        port: 'port'\n    };\n    $scope.type1 = true;\n    $scope.ruleType = $scope.ruleItems[0];\n    $scope.formData = {\n        protocol: 'tcp',\n        direction: 'ingress',\n        ethertype: \"IPv4\",\n        remote_ip_prefix: '0.0.0.0/0',\n        security_group_id: $state.params.id\n    };\n    $scope.changeRule = function (type,value) {\n        console.log(type);\n        $scope.formData.protocol = value;\n        switch (type) {\n            case 'type1':\n                $scope.type1 = true;\n                $scope.type2 = false;\n                $scope.type3 = false;\n                $scope.type4 = false;\n                break;\n            case 'type2':\n                $scope.type2 = true;\n                $scope.type1 = false;\n                $scope.type3 = false;\n                $scope.type4 = false;\n                break;\n            case 'type3':\n                $scope.type3 = true;\n                $scope.type1 = false;\n                $scope.type2 = false;\n                $scope.type4 = false;\n                break;\n            case 'type4':\n                $scope.type4 = true;\n                $scope.type1 = false;\n                $scope.type2 = false;\n                $scope.type3 = false;\n                $scope.formData.direction = 'ingress';\n                break;\n        }\n\n    };\n    $http({\n        url: '/api/list_segroups/' + $state.params.id,\n        headers: $rootScope.headers\n    }).then(function (response) {\n        console.log(response);\n        $scope.name = response.data.security_group.name;\n        $scope.rules = response.data.security_group.security_group_rules;\n    }, function (response) {\n        alert(response.statusText);\n    });\n    $scope.deleteRule = function (ruleId, ruleName) { //删除规则\n        if (confirm('确定要删除规则吗？')) {\n            $http({\n                url: '/api/serules/' + ruleId,\n                method: 'DELETE',\n                headers: $rootScope.headers\n            }).then(function (response) {\n                console.log(response);\n\n            }, function (response) {\n                alert(response.statusText);\n            });\n        }\n    };\n    $scope.formSubmit = function ($event) { //添加规则表单\n        $event.preventDefault();\n        switch ($scope.formData.protocol) {\n            case 'dns':\n                $scope.formData.port_range_min = $scope.icmpType;\n                $scope.formData.port_range_max = $scope.icmpCode;\n                break;\n            case 'dns':\n                $scope.formData.port_range_min = 53;\n                $scope.formData.port_range_max = 53;\n                break;\n            case 'http':\n                $scope.formData.port_range_min = 80;\n                $scope.formData.port_range_max = 80;\n                break;\n            case 'https':\n                $scope.formData.port_range_min = 443;\n                $scope.formData.port_range_max = 443;\n                break;\n            case 'imap':\n                $scope.formData.port_range_min = 143;\n                $scope.formData.port_range_max = 143;\n                break;\n            case 'imaps':\n                $scope.formData.port_range_min = 993;\n                $scope.formData.port_range_max = 993;\n                break;\n            case 'ldap':\n                $scope.formData.port_range_min = 389;\n                $scope.formData.port_range_max = 389;\n                break;\n            case 'ms_sql':\n                $scope.formData.port_range_min = 1433;\n                $scope.formData.port_range_max = 1433;\n                break;\n            case 'mysql':\n                $scope.formData.port_range_min = 3306;\n                $scope.formData.port_range_max = 3306;\n                break;\n            case 'pop3':\n                $scope.formData.port_range_min = 110;\n                $scope.formData.port_range_max = 110;\n                break;\n            case 'pop3s':\n                $scope.formData.port_range_min = 995;\n                $scope.formData.port_range_max = 995;\n                break;\n            case 'rdp':\n                $scope.formData.port_range_min = 3389;\n                $scope.formData.port_range_max = 3389;\n                break;\n            case 'smtp':\n                $scope.formData.port_range_min = 25;\n                $scope.formData.port_range_max = 25;\n                break;\n            case 'smtps':\n                $scope.formData.port_range_min = 465;\n                $scope.formData.port_range_max = 465;\n                break;\n            case 'ssh':\n                $scope.formData.port_range_min = 22;\n                $scope.formData.port_range_max = 22;\n                break;\n        }\n        $http({\n            url: '/api/serules/',\n            headers: $rootScope.headers,\n            method: 'POST',\n            data: {\n                \"security_group_rule\": $scope.formData\n            }\n\n        }).then(function (response) {\n            console.log(response);\n            $('#add_rule').modal('hide');\n            $timeout(function () {\n                $state.go('security.rule', {id: $state.params.id}, {reload: true});\n            }, 1000);\n        }, function (response) {\n            alert(response.statusText);\n        });\n    };\n}]);\n"]}